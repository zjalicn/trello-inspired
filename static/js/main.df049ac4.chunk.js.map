{"version":3,"sources":["actions/actions.js","actions/CardActions.js","components/ActionButton/RemoveCardButton.js","components/ActionButton/MoveToDoButton.js","components/ActionButton/MoveInProgressButton.js","components/ActionButton/MoveQAButton.js","components/TrelloCard/TrelloCard.js","components/ActionButton/ActionButton.js","components/TrelloList/TrelloList.js","App.js","reducers/ListsReducer.js","index.js"],"names":["CONSTANTS","addCard","text","listId","type","payload","removeCardAction","id","moveCardAction","newListId","RemoveCardButton","removeCard","dispatch","props","Button","className","Component","connect","MoveToDoButton","moveToDo","MoveInProgressButton","moveInProgress","MoveQAButton","moveQA","TrelloCard","index","Container","style","margin","Card","Typography","color","gutterBottom","loadButtons","ActionButton","state","formOpen","handleInputChange","e","setState","target","value","addNewCard","renderAddButton","onClick","paddingTop","Icon","renderForm","padding","placeholder","autoFocus","onChange","minHeight","overflow","resize","variant","this","styles","container","backgroundColor","borderRadius","width","marginBottom","TrelloList","title","cards","Col","lg","map","card","key","App","dragCard","lists","Row","list","ListsReducer","initialState","getInitialState","cardId","action","newCard","newState","newList","console","log","filter","c","moveCard","store","createStore","combineReducers","ReactDOM","render","document","getElementById"],"mappings":"4UAEaA,EACC,WADDA,EAEI,cAFJA,EAGE,YCHFC,EAAU,SAACC,EAAOC,GAC3B,MAAQ,CACJC,KAAMJ,EACNK,QAAS,CAAEH,OAAMC,YAIZG,EAAmB,SAACC,EAAIJ,GACjC,MAAQ,CACJC,KAAMJ,EACNK,QAAS,CAACE,KAAIJ,YAITK,EAAiB,SAACD,EAAIJ,EAAQM,GACvC,MAAQ,CACJL,KAAMJ,EACNK,QAAS,CAACE,KAAIJ,SAAQM,eCZxBC,E,2MAEJC,WAAa,WAAO,IACVC,EAAa,EAAKC,MAAlBD,SACAL,EAAO,EAAKM,MAAZN,GACAJ,EAAW,EAAKU,MAAhBV,OACRS,EAASN,EAAiBC,EAAIJ,K,wEAItB,IAAD,SACP,OACE,kBAACW,EAAA,GAAD,GACEC,UAAU,mBADZ,0BAEY,kBAFZ,wBAGW,WACP,EAAKJ,WAAW,EAAKE,MAAMN,GAAI,EAAKM,MAAMV,UAJ9C,iB,GAZyBa,aAyBhBC,gBAAUP,GC3BnBQ,E,2MAEJC,SAAW,WAAO,IAAD,EAC6B,EAAKN,MAAzCD,EADO,EACPA,SAAUL,EADH,EACGA,GAAIJ,EADP,EACOA,OADP,EACeM,UAC9BG,EAASJ,EAAeD,EAAIJ,EAAQ,K,wEAI5B,IAAD,SACP,OACE,kBAACW,EAAA,GAAD,GACEC,UAAU,mBADZ,0BAEY,kBAFZ,wBAGW,WACP,EAAKI,SAAS,EAAKN,MAAMN,GAAI,EAAKM,MAAMV,UAJ5C,gB,GAVuBa,aAuBdC,gBAAUC,GCvBnBE,E,2MAEJC,eAAiB,WAAO,IAAD,EACY,EAAKR,MAA9BD,EADa,EACbA,SAAUL,EADG,EACHA,GAAIJ,EADD,EACCA,OACtBS,EAASJ,EAAeD,EAAIJ,EAAQ,K,wEAI5B,IAAD,SACP,OACE,kBAACW,EAAA,GAAD,GACEC,UAAU,mBADZ,0BAEY,kBAFZ,wBAGW,WACP,EAAKM,eAAe,EAAKR,MAAMN,GAAI,EAAKM,MAAMV,UAJlD,sB,GAV6Ba,aAuBpBC,gBAAUG,GCvBnBE,E,2MAEJC,OAAS,WAAO,IAAD,EACoB,EAAKV,MAA9BD,EADK,EACLA,SAAUL,EADL,EACKA,GAAIJ,EADT,EACSA,OACtBS,EAASJ,EAAeD,EAAIJ,EAAQ,K,wEAI5B,IAAD,SACP,OACE,kBAACW,EAAA,GAAD,GACEC,UAAU,mBADZ,0BAEY,kBAFZ,wBAGW,WACP,EAAKQ,OAAO,EAAKV,MAAMN,GAAI,EAAKM,MAAMV,UAJ1C,uB,GAVqBa,aAuBZC,gBAAUK,GC4BVE,EAbI,SAAC,GAAiC,IAA/BtB,EAA8B,EAA9BA,KAAMK,EAAwB,EAAxBA,GAAWJ,GAAa,EAApBsB,MAAoB,EAAbtB,QACrC,OACE,kBAACuB,EAAA,EAAD,CAAWC,MAAO,CAAEC,OAAQ,WAC1B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAC3C9B,GAxCS,SAACK,EAAIJ,EAAQsB,GAC/B,OACE,yBAAKV,UAAU,uBACb,kBAAC,EAAD,CACER,GAAIA,EACJJ,OAAQA,IAEE,IAAXA,EACC,kBAAC,EAAD,CACEI,GAAIA,EACJJ,OAAQA,IAGV,GAEU,IAAXA,EACC,kBAAC,EAAD,CACEI,GAAIA,EACJJ,OAAQA,IAGV,GAEU,IAAXA,EACC,kBAAC,EAAD,CACEI,GAAIA,EACJJ,OAAQA,IAGV,IAaC8B,CAAY1B,EAAIJ,M,wBC1CnB+B,E,2MACJC,MAAQ,CACNC,UAAU,EACVlC,KAAM,I,EAGRmC,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CACVrC,KAAMoC,EAAEE,OAAOC,S,EAIrBC,WAAa,WAAO,IACV9B,EAAa,EAAKC,MAAlBD,SACAV,EAAS,EAAKiC,MAAdjC,KACAC,EAAW,EAAKU,MAAhBV,OACJD,GACAU,EAASX,EAAQC,EAAMC,K,EAK7BwC,gBAAkB,WAChB,OACE,uBACEC,QAAS,WACP,EAAKL,SAAS,CACZH,UAAW,EAAKD,MAAMC,aAI1B,kBAACV,EAAA,EAAD,CAAWC,MAAO,CAAEC,OAAQ,WAC1B,kBAACC,EAAA,EAAD,CAAMF,MAAO,CAAEkB,WAAY,SACzB,kBAACC,EAAA,EAAD,YACA,iD,EAOVC,WAAa,WACX,OACE,kBAACrB,EAAA,EAAD,CAAWC,MAAO,CAAEC,OAAQ,WAC1B,kBAACC,EAAA,EAAD,CAAMF,MAAO,CAAEqB,QAAS,WACtB,kBAAC,IAAD,CACEC,YAAY,mBACZC,WAAS,EACTC,SAAU,EAAKd,kBACfV,MAAO,CACLyB,UAAW,MACXC,SAAU,SACVC,OAAQ,UAGZ,6BACA,kBAACxC,EAAA,EAAD,CACEyC,QAAQ,UACRxC,UAAU,iBACV6B,QAAS,WACP,EAAKF,WAAW,EAAK7B,MAAMX,KAAM,EAAKW,MAAMV,QAC5C,EAAKoC,SAAS,CACZH,UAAW,EAAKD,MAAMC,aAN5B,eAYA,kBAACtB,EAAA,EAAD,CACEyC,QAAQ,UACRxC,UAAU,iBACV6B,QAAS,WACP,EAAKL,SAAS,CACZH,UAAW,EAAKD,MAAMC,aAL5B,a,wEAiBN,OAAOoB,KAAKrB,MAAMC,SAAWoB,KAAKT,aAAeS,KAAKb,sB,GArF/B3B,aAyFZC,gBAAUiB,GCxEnBuB,EAAS,CACbC,UAAW,CACTC,gBAAiB,OACjBC,aAAc,EACdC,MAAO,IACPb,QAAS,EACTc,aAAc,KAIHC,EA9BI,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAA4B,IAArBC,aAAqB,MAAb,GAAa,EAAT1D,EAAS,EAATA,GACvC,OACE,kBAAC2D,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACzC,EAAA,EAAD,CAAWC,MAAO8B,EAAOC,WACvB,4BAAKM,GACJC,EAAMG,IAAI,SAACC,EAAM5C,GAAP,OACT,kBAAC,EAAD,CACE6C,IAAKD,EAAK9D,GACVJ,OAAQI,EACRA,GAAI8D,EAAK9D,GACTL,KAAMmE,EAAKnE,KACXuB,MAAOA,MAGX,kBAAC,EAAD,CAAc6C,IAAK/D,EAAIJ,OAAQI,O,QCPjCgE,G,iNAEJC,SAAW,WACT,MAAO,Y,wEAGC,IACFC,EAAUjB,KAAK3C,MAAf4D,MACN,OACE,yBAAK1D,UAAU,OACb,kBAACW,EAAA,EAAD,KACE,4CACA,6BACA,kBAACgD,EAAA,EAAD,CAAK3D,UAAU,aAEX0D,EAAML,IAAI,SAAAO,GAAI,OACZ,kBAAC,EAAD,CACAL,IAAKK,EAAKpE,GACVyD,MAAOW,EAAKX,MACZC,MAAOU,EAAKV,MACZ1D,GAAIoE,EAAKpE,c,GApBPS,cA6BHC,cAnCS,SAAAkB,GACtB,MAAO,CACLsC,MAAOtC,EAAMyC,cAAgB,KAiClB3D,CAAyBsD,G,ykBCtCxC,IAAMM,EAAe,CACnB,CACEb,MAAO,QACPzD,GAAI,EACJ0D,MAAO,CACL,CACE1D,GAAI,EACJL,KAAM,kDAER,CACEK,GAAI,EACJL,KAAM,mBAER,CACEK,GAAI,EACJL,KAAM,WAIZ,CACE8D,MAAO,cACPzD,GAAI,EACJ0D,MAAO,CACL,CACE1D,GAAI,EACJL,KAAM,6DAER,CACEK,GAAI,EACJL,KAAM,8CAIZ,CACE8D,MAAO,eACPzD,GAAI,EACJ0D,MAAO,CACL,CACE1D,GAAI,EACJL,KAAM,wFAMR4E,EAAkB,WACtB,OAAOD,GAGLE,EAAS,EAiEEH,EA/DM,WAAwC,IAAvCzC,EAAsC,uDAA9B2C,IAAmBE,EAAW,uCAC1D,OAAQA,EAAO5E,MACb,KAAKJ,EACH,IAAMiF,EAAU,CACd1E,GAAIwE,EACJ7E,KAAM8E,EAAO3E,QAAQH,MAEvB6E,IAEA,IAAMG,EAAW/C,EAAMiC,IAAI,SAAAO,GACzB,OAAIA,EAAKpE,KAAOyE,EAAO3E,QAAQF,OACtB,EAAP,GACKwE,EADL,CAEEV,MAAM,GAAD,mBAAMU,EAAKV,OAAX,CAAkBgB,MAGlBN,IAGX,OAAOO,EAET,KAAKlF,EACH,IAAMmF,EAAUhD,EAAMiC,IAAI,SAAAO,GACxB,OAAIA,EAAKpE,IAAMyE,EAAO3E,QAAQF,QAC5BiF,QAAQC,IAAIV,EAAKV,MAAMqB,OAAO,SAAAC,GAAC,OAAIA,EAAEhF,IAAMyE,EAAO3E,QAAQE,MACnD,EAAP,GACKoE,EADL,CAEEV,MAAOU,EAAKV,MAAMqB,OAAO,SAAAC,GAAC,OAAIA,EAAEhF,IAAMyE,EAAO3E,QAAQE,QAGhDoE,IAGX,OAAOQ,EAET,KAAKnF,EAAsB,IAAD,EACQgF,EAAO3E,QAAjCF,EADkB,EAClBA,OAAQI,EADU,EACVA,GAAIE,EADM,EACNA,UACd+E,EAAWrD,EAAMhC,GAAQ8D,MAAMqB,OAAO,SAAAC,GAAC,OAAIA,EAAEhF,IAAMA,IAEjD4E,EAAUhD,EAAMiC,IAAI,SAAAO,GACxB,OAAIA,EAAKpE,IAAME,EACN,EAAP,GACKkE,EADL,CAEEV,MAAM,GAAD,mBAAMU,EAAKV,OAAX,CAAkBuB,EAAS,OAGhCb,EAAKpE,IAAMyE,EAAO3E,QAAQF,OACrB,EAAP,GACKwE,EADL,CAEEV,MAAOU,EAAKV,MAAMqB,OAAO,SAAAC,GAAC,OAAIA,EAAEhF,IAAMyE,EAAO3E,QAAQE,OAGhDoE,IAGX,OAAOQ,EAGT,QACE,OAAOhD,ICzGPsD,EAAQC,YAAYC,YAAgB,CAACf,kBAE3CgB,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.df049ac4.chunk.js","sourcesContent":["export * from './CardActions';\r\n\r\nexport const CONSTANTS = {\r\n    ADD_CARD: \"ADD_CARD\",\r\n    REMOVE_CARD: \"REMOVE_CARD\",\r\n    MOVE_CARD: \"MOVE_CARD\",\r\n};","import { CONSTANTS } from \"../actions/actions\";\r\n\r\nexport const addCard = (text,  listId) => {\r\n    return ({\r\n        type: CONSTANTS.ADD_CARD,\r\n        payload: { text, listId }\r\n    })\r\n};\r\n\r\nexport const removeCardAction = (id, listId,) => {\r\n    return ({\r\n        type: CONSTANTS.REMOVE_CARD,\r\n        payload: {id, listId}\r\n    });\r\n};\r\n\r\nexport const moveCardAction = (id, listId, newListId) => {\r\n    return ({\r\n        type: CONSTANTS.MOVE_CARD,\r\n        payload: {id, listId, newListId}\r\n    });\r\n};","import React, { Component } from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport TextArea from \"react-textarea-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeCardAction } from \"../../actions/CardActions\";\r\n\r\nclass RemoveCardButton extends Component {\r\n  \r\n  removeCard = () => {\r\n    const { dispatch } = this.props;\r\n    const { id } = this.props;\r\n    const { listId } = this.props;\r\n    dispatch(removeCardAction(id, listId));\r\n    return;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Button\r\n        className=\"card-remove-btn\"\r\n        className=\"button-spacing\"\r\n        onClick={() => {\r\n          this.removeCard(this.props.id, this.props.listId);\r\n        }}\r\n      >\r\n        Remove\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(RemoveCardButton);\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveCardAction } from \"../../actions/CardActions\";\r\n\r\nclass MoveToDoButton extends Component {\r\n  \r\n  moveToDo = () => {\r\n    const { dispatch, id, listId, newListId } = this.props;\r\n    dispatch(moveCardAction(id, listId, 0));\r\n    return;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Button\r\n        className=\"card-remove-btn\"\r\n        className=\"button-spacing\"\r\n        onClick={() => {\r\n          this.moveToDo(this.props.id, this.props.listId);\r\n        }}\r\n      >\r\n        To Do\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(MoveToDoButton);\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveCardAction } from \"../../actions/CardActions\";\r\n\r\nclass MoveInProgressButton extends Component {\r\n  \r\n  moveInProgress = () => {\r\n    const { dispatch, id, listId } = this.props;\r\n    dispatch(moveCardAction(id, listId, 1));\r\n    return;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Button\r\n        className=\"card-remove-btn\"\r\n        className=\"button-spacing\"\r\n        onClick={() => {\r\n          this.moveInProgress(this.props.id, this.props.listId);\r\n        }}\r\n      >\r\n        In Progress\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(MoveInProgressButton);\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveCardAction } from \"../../actions/CardActions\";\r\n\r\nclass MoveQAButton extends Component {\r\n  \r\n  moveQA = () => {\r\n    const { dispatch, id, listId } = this.props;\r\n    dispatch(moveCardAction(id, listId, 2));\r\n    return;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Button\r\n        className=\"card-remove-btn\"\r\n        className=\"button-spacing\"\r\n        onClick={() => {\r\n          this.moveQA(this.props.id, this.props.listId);\r\n        }}\r\n      >\r\n        Ready for QA\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(MoveQAButton);\r\n","import React from \"react\";\r\nimport { Card, Typography } from \"@material-ui/core\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport RemoveCardButton from '../ActionButton/RemoveCardButton';\r\nimport MoveToDoButton from '../ActionButton/MoveToDoButton';\r\nimport MoveInProgressButton from '../ActionButton/MoveInProgressButton';\r\nimport MoveQAButton from '../ActionButton/MoveQAButton';\r\n\r\nconst loadButtons = (id, listId, index) => {\r\n  return (\r\n    <div className=\"card-status-buttons\">\r\n      <RemoveCardButton\r\n        id={id}\r\n        listId={listId}\r\n      />\r\n      {listId !== 0 ? (\r\n        <MoveToDoButton\r\n          id={id}\r\n          listId={listId}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {listId !== 1 ? (\r\n        <MoveInProgressButton\r\n          id={id}\r\n          listId={listId}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {listId !== 2 ? (\r\n        <MoveQAButton\r\n          id={id}\r\n          listId={listId}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TrelloCard = ({ text, id, index, listId }) => {\r\n  return (\r\n    <Container style={{ margin: \"10px 0\" }}>\r\n      <Card>\r\n        <Typography color=\"textSecondary\" gutterBottom>\r\n          {text}\r\n        </Typography>\r\n        {loadButtons(id, listId)}\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TrelloCard;\r\n","import React, { Component } from \"react\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { Container, Button } from \"react-bootstrap\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TextArea from \"react-textarea-autosize\";\r\nimport { connect } from 'react-redux';\r\nimport { addCard } from \"../../actions/CardActions\";\r\n\r\nclass ActionButton extends Component {\r\n  state = { //give it its own state because this info isnt relevant to parent\r\n    formOpen: false,\r\n    text: \"\",\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n        text: e.target.value\r\n    });\r\n  };\r\n\r\n  addNewCard = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n    const { listId } = this.props;\r\n    if (text){\r\n        dispatch(addCard(text, listId));\r\n    }\r\n    return;\r\n  }\r\n\r\n  renderAddButton = () => {\r\n    return (\r\n      <a\r\n        onClick={() => {\r\n          this.setState({\r\n            formOpen: !this.state.formOpen\r\n          });\r\n        }}\r\n      >\r\n        <Container style={{ margin: \"10px 0\" }}>\r\n          <Card style={{ paddingTop: \"10px\" }}>\r\n            <Icon>add</Icon>\r\n            <p>Add a new task</p>\r\n          </Card>\r\n        </Container>\r\n      </a>\r\n    );\r\n  };\r\n\r\n  renderForm = () => {\r\n    return (\r\n      <Container style={{ margin: \"10px 0\" }}>\r\n        <Card style={{ padding: \"10px 0\" }}>\r\n          <TextArea\r\n            placeholder=\"Enter Card title\"\r\n            autoFocus\r\n            onChange={this.handleInputChange}\r\n            style={{\r\n              minHeight: \"4em\",\r\n              overflow: \"hidden\",\r\n              resize: \"none\"\r\n            }}\r\n          />\r\n          <hr />\r\n          <Button\r\n            variant=\"success\"\r\n            className=\"button-spacing\"\r\n            onClick={() => {\r\n              this.addNewCard(this.props.text, this.props.listId);\r\n              this.setState({\r\n                formOpen: !this.state.formOpen\r\n              });\r\n            }}\r\n          >\r\n            Add to list\r\n          </Button>\r\n          <Button\r\n            variant=\"warning\"\r\n            className=\"button-spacing\"\r\n            onClick={() => {\r\n              this.setState({\r\n                formOpen: !this.state.formOpen\r\n              });\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n  }\r\n}\r\n\r\nexport default connect()(ActionButton);\r\n","import React from \"react\";\r\nimport TrelloCard from \"../TrelloCard/TrelloCard\";\r\nimport { Container, Col } from \"react-bootstrap\";\r\nimport ActionButton from \"../ActionButton/ActionButton\";\r\n\r\nconst TrelloList = ({ title, cards = [], id }) => {\r\n  return (\r\n    <Col lg={4}>\r\n      <Container style={styles.container}>\r\n        <h4>{title}</h4>\r\n        {cards.map((card, index) => (\r\n          <TrelloCard\r\n            key={card.id}\r\n            listId={id}\r\n            id={card.id}\r\n            text={card.text}\r\n            index={index}\r\n          />\r\n        ))}\r\n        <ActionButton key={id} listId={id} />\r\n      </Container>\r\n    </Col>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    backgroundColor: \"#ccc\",\r\n    borderRadius: 3,\r\n    width: 300,\r\n    padding: 4,\r\n    marginBottom: 20\r\n  }\r\n};\r\n\r\nexport default TrelloList;\r\n","import React, { Component } from \"react\";\r\nimport TrelloList from \"./components/TrelloList/TrelloList\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect, Provider } from \"react-redux\";\r\nimport \"./App.css\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lists: state.ListsReducer || []\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  \r\n  dragCard = () => {\r\n    return \"dragCard\";\r\n  }\r\n\r\n  render() {\r\n    let { lists } = this.props;  \r\n    return (\r\n      <div className=\"App\">\r\n        <Container>\r\n          <h2>Trello Board</h2>\r\n          <hr />\r\n          <Row className=\"show-grid\">\r\n            {\r\n              lists.map(list => (\r\n                <TrelloList \r\n                key={list.id}\r\n                title={list.title} \r\n                cards={list.cards} \r\n                id={list.id}/>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { CONSTANTS } from \"../actions/actions\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = [\r\n  {\r\n    title: \"To Do\",\r\n    id: 0,\r\n    cards: [\r\n      {\r\n        id: 0,\r\n        text: \"Trello style planning board created with React\"\r\n      },\r\n      {\r\n        id: 1,\r\n        text: \"React-Bootstrap\"\r\n      },\r\n      {\r\n        id: 4,\r\n        text: \"Redux\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"In Progress\",\r\n    id: 1,\r\n    cards: [\r\n      {\r\n        id: 2,\r\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. \"\r\n      },\r\n      {\r\n        id: 5,\r\n        text: \"Nam cursus pulvinar tellus ac convallis.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"Ready for QA\",\r\n    id: 2,\r\n    cards: [\r\n      {\r\n        id: 3,\r\n        text: \"In hac habitasse platea dictumst. Aenean malesuada massa a velit lobortis rutrum.\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst getInitialState = () => {\r\n  return initialState;\r\n};\r\n\r\nlet cardId = 6;\r\n\r\nconst ListsReducer = (state = getInitialState(), action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_CARD: {\r\n      const newCard = {\r\n        id: cardId,\r\n        text: action.payload.text\r\n      };\r\n      cardId++;\r\n\r\n      const newState = state.map(list => {\r\n        if (list.id === action.payload.listId) {\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newCard]\r\n          };\r\n        } else {\r\n          return list;\r\n        }\r\n      });\r\n      return newState;\r\n    }\r\n    case CONSTANTS.REMOVE_CARD: {\r\n      const newList = state.map(list => {\r\n        if (list.id == action.payload.listId) {\r\n          console.log(list.cards.filter(c => c.id != action.payload.id));\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(c => c.id != action.payload.id)\r\n          };\r\n        } else {\r\n          return list;\r\n        }\r\n      });\r\n      return newList;\r\n    }\r\n    case CONSTANTS.MOVE_CARD: {\r\n      let { listId, id, newListId } = action.payload;\r\n      let moveCard = state[listId].cards.filter(c => c.id == id);\r\n\r\n      const newList = state.map(list => {\r\n        if (list.id == newListId) {\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, moveCard[0]]\r\n          };\r\n        }\r\n        if (list.id == action.payload.listId) {\r\n          return {\r\n            ...list,\r\n            cards: list.cards.filter(c => c.id != action.payload.id)\r\n          };\r\n        } else {\r\n          return list;\r\n        }\r\n      });\r\n      return newList;\r\n      }\r\n        \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ListsReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport ListsReducer from \"./reducers/ListsReducer\";\r\n\r\nconst store = createStore(combineReducers({ListsReducer}));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}